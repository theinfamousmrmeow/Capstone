{"remainingRequest":"C:\\Capstone\\flaskProject\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Capstone\\flaskProject\\client\\src\\components\\Chart2.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Capstone\\flaskProject\\client\\src\\components\\Chart2.vue","mtime":1640549897900},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWVBcGV4Q2hhcnRzIGZyb20gJ3Z1ZS1hcGV4Y2hhcnRzJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGFydCcsCiAgY29tcG9uZW50czogewogICAgYXBleGNoYXJ0czogVnVlQXBleENoYXJ0cwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhcmdldFRpbWU6IDYwLAogICAgICBtYXhWYWx1ZTogMTAsCiAgICAgIGJyYWluczogWzBdLAogICAgICBzZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ1RFQU0gMScsCiAgICAgICAgZGF0YTogdGhpcy5nZW5lcmF0ZURheVdpc2VUaW1lU2VyaWVzKG5ldyBEYXRlKCcxMSBGZWIgMjAxNyBHTVQnKS5nZXRUaW1lKCksIDIwLCB7CiAgICAgICAgICBtaW46IDEwLAogICAgICAgICAgbWF4OiA2MAogICAgICAgIH0pCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnVEVBTSAyJywKICAgICAgICBkYXRhOiB0aGlzLmdlbmVyYXRlRGF5V2lzZVRpbWVTZXJpZXMobmV3IERhdGUoJzExIEZlYiAyMDE3IEdNVCcpLmdldFRpbWUoKSwgMjAsIHsKICAgICAgICAgIG1pbjogMTAsCiAgICAgICAgICBtYXg6IDYwCiAgICAgICAgfSkKICAgICAgfV0sCiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICBoZWlnaHQ6IDQwMCwKICAgICAgICAgIHR5cGU6ICdzY2F0dGVyJywKICAgICAgICAgIHpvb206IHsKICAgICAgICAgICAgdHlwZTogJ3h5JwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgIGxpbmVzOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgbGluZXM6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHhheGlzOiB7CiAgICAgICAgICB0eXBlOiAnZGF0ZXRpbWUnCiAgICAgICAgfSwKICAgICAgICB5YXhpczogewogICAgICAgICAgbWF4OiAxMDAKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgbWV0aG9kczogewogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICBjb252ZXJ0QnJhaW5zVG9TZXJpZXM6IGZ1bmN0aW9uIGNvbnZlcnRCcmFpbnNUb1NlcmllcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzZXJpZXMgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzLG5vLXJldHVybi1hc3NpZ24KCiAgICAgIHRoaXMuYnJhaW5zLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICB2YXIgeCA9IGVsZW1lbnRbMF07CiAgICAgICAgdmFyIHkgPSBlbGVtZW50WzJdOwoKICAgICAgICBpZiAoeSA+IF90aGlzLm1heFZhbHVlKSB7CiAgICAgICAgICBfdGhpcy5tYXhWYWx1ZSA9IHk7CiAgICAgICAgfQoKICAgICAgICBzZXJpZXMucHVzaChbeCwgeV0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIHNlcmllczsKICAgIH0sCiAgICBnZW5lcmF0ZURheVdpc2VUaW1lU2VyaWVzOiBmdW5jdGlvbiBnZW5lcmF0ZURheVdpc2VUaW1lU2VyaWVzKGJhc2V2YWwsIGNvdW50LCB5cmFuZ2UpIHsKICAgICAgdmFyIGkgPSAwOwogICAgICB2YXIgc2VyaWVzID0gW107CgogICAgICB3aGlsZSAoaSA8IGNvdW50KSB7CiAgICAgICAgdmFyIHggPSBiYXNldmFsOwogICAgICAgIHZhciB5ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKHlyYW5nZS5tYXggLSB5cmFuZ2UubWluICsgMSkpICsgeXJhbmdlLm1pbjsgLy8gVGhlc2UgYXJlIHRpbWUgYW5kIHZhbHVlCgogICAgICAgIHNlcmllcy5wdXNoKFt4LCB5XSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnbgoKICAgICAgICBiYXNldmFsICs9IDg2NDAwMDAwOwogICAgICAgIGkgKz0gMTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNlcmllczsKICAgIH0sCiAgICBnZXRTZXNzaW9uczogZnVuY3Rpb24gZ2V0U2Vzc2lvbnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL3Nlc3Npb25zJzsKICAgICAgYXhpb3MuZ2V0KHBhdGgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIHRoaXMuYnJhaW5zID0gcmVzLmRhdGE7CiAgICAgICAgX3RoaXMyLmJyYWlucyA9IHJlcy5kYXRhOwogICAgICAgIGNvbnNvbGUubG9nKCdCUkFJTlMnLCBKU09OLnN0cmluZ2lmeShfdGhpczIuYnJhaW5zKSk7CiAgICAgICAgY29uc29sZS5sb2coJ0JSQUlOIDA6ICcsIF90aGlzMi5icmFpbnNbMF0pOwoKICAgICAgICBfdGhpczIudXBkYXRlQ2hhcnQoKTsgLy8gVXBkYXRlIENoYXJ0PwoKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgLy8gY29uc3QgbWF4ID0gOTA7CiAgICAgIC8vIGNvbnN0IG1pbiA9IDIwOwogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlbgogICAgICAvLyBjb25zdCBuZXdEYXRhID0gdGhpcy5zZXJpZXNbMF0uZGF0YS5tYXAoKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbikKICAgICAgdGhpcy5zZXJpZXMgPSBbewogICAgICAgIG5hbWU6ICdTZXNzaW9uIExlbmd0aCAoTVMpJywKICAgICAgICBkYXRhOiB0aGlzLmNvbnZlcnRCcmFpbnNUb1NlcmllcygpCiAgICAgIH1dOwogICAgICB0aGlzLmNoYXJ0T3B0aW9ucyA9IHsKICAgICAgICBjaGFydDogewogICAgICAgICAgaGVpZ2h0OiA0MDAsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICB6b29tOiB7CiAgICAgICAgICAgIHR5cGU6ICd4eScKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGFubm90YXRpb25zOiB7CiAgICAgICAgICB5YXhpczogW3sKICAgICAgICAgICAgeTogdGhpcy50YXJnZXRUaW1lICogMTAwMCwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjMDBFMzk2JywKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJyMwMEUzOTYnLAogICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJyNmZmYnLAogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJyMwMEUzOTYnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB0ZXh0OiAiVGFyZ2V0OiIuY29uY2F0KHRoaXMudGFyZ2V0VGltZSwgInMiKQogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH0sCiAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgeGF4aXM6IHsKICAgICAgICAgICAgbGluZXM6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB5YXhpczogewogICAgICAgICAgICBsaW5lczogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdkYXRldGltZScKICAgICAgICB9LAogICAgICAgIHlheGlzOiB7CiAgICAgICAgICBtYXg6IHRoaXMubWF4VmFsdWUgKyAxCiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0U2Vzc2lvbnMoKTsKICB9Cn07"},{"version":3,"sources":["Chart2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app\">\n     <apexcharts width=\"800\" type=\"line\" :options=\"chartOptions\" :series=\"series\"></apexcharts>\n    <div>\n      <button @click=\"updateChart\">Update!</button>\n  </div>\n  </div>\n\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts';\nimport axios from 'axios';\n\nexport default {\n  name: 'Chart',\n  components: {\n    apexcharts: VueApexCharts,\n  },\n  data() {\n    return {\n      targetTime: 60,\n      maxValue: 10,\n      brains: [0],\n      series: [{\n        name: 'TEAM 1',\n        data: this.generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60,\n        }),\n      },\n      {\n        name: 'TEAM 2',\n        data: this.generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n          min: 10,\n          max: 60,\n        }),\n      },\n      ],\n      chartOptions: {\n        chart: {\n          height: 400,\n          type: 'scatter',\n          zoom: {\n            type: 'xy',\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: true,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: true,\n            },\n          },\n        },\n        xaxis: {\n          type: 'datetime',\n        },\n        yaxis: {\n          max: 100,\n        },\n      },\n    };\n  },\n\n  computed: {\n\n  },\n\n  methods: {\n\n    // eslint-disable-next-line no-unused-vars\n    convertBrainsToSeries() {\n      const series = [];\n      // eslint-disable-next-line no-unused-vars,no-return-assign\n      this.brains.forEach((element) => {\n        const x = element[0];\n        const y = element[2];\n        if (y > this.maxValue) {\n          this.maxValue = y;\n        }\n        series.push([x, y]);\n      });\n      return series;\n    },\n\n    generateDayWiseTimeSeries(baseval, count, yrange) {\n      let i = 0;\n      const series = [];\n      while (i < count) {\n        const x = baseval;\n        const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        // These are time and value\n        series.push([x, y]);\n        // eslint-disable-next-line no-param-reassign\n        baseval += 86400000;\n        i += 1;\n      }\n      return series;\n    },\n    getSessions() {\n      const path = 'http://localhost:5000/sessions';\n      axios.get(path)\n        .then((res) => {\n          // this.brains = res.data;\n          this.brains = res.data;\n          console.log('BRAINS', JSON.stringify(this.brains));\n          console.log('BRAIN 0: ', this.brains[0]);\n          this.updateChart();\n          // Update Chart?\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n\n    updateChart() {\n      // const max = 90;\n      // const min = 20;\n      // eslint-disable-next-line max-len\n      // const newData = this.series[0].data.map(() => Math.floor(Math.random() * (max - min + 1)) + min)\n      this.series = [\n        {\n          name: 'Session Length (MS)',\n          data: this.convertBrainsToSeries(),\n        },\n      ];\n      this.chartOptions = {\n        chart: {\n          height: 400,\n          type: 'line',\n          zoom: {\n            type: 'xy',\n          },\n        },\n        annotations: {\n          yaxis: [{\n            y: this.targetTime * 1000,\n            borderColor: '#00E396',\n            label: {\n              borderColor: '#00E396',\n              style: {\n                color: '#fff',\n                background: '#00E396',\n              },\n              text: `Target:${this.targetTime}s`,\n            },\n          },\n          ],\n        },\n        dataLabels: {\n          enabled: true,\n        },\n        grid: {\n          xaxis: {\n            lines: {\n              show: true,\n            },\n          },\n          yaxis: {\n            lines: {\n              show: true,\n            },\n          },\n        },\n        xaxis: {\n          type: 'datetime',\n        },\n        yaxis: {\n          max: this.maxValue + 1,\n        },\n      };\n    },\n  },\n  created() {\n    this.getSessions();\n  },\n};\n</script>\n<style scoped>\n  button {\n    background: #26E6A4;\n    border: 0;\n    font-size: 16px;\n    padding: 10px;\n    margin-left: 28px;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}