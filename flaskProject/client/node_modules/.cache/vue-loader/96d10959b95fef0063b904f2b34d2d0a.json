{"remainingRequest":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Capstone\\flaskProject\\client\\src\\components\\Sessions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Capstone\\flaskProject\\client\\src\\components\\Sessions.vue","mtime":1633998137061},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Nlc3Npb25zJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbXNnOiAnJywKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRNZXNzYWdlKCkgewogICAgICBjb25zdCBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9zZXNzaW9ucyc7CiAgICAgIGF4aW9zLmdldChwYXRoKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMubXNnID0gcmVzLmRhdGE7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgIH0pOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLyBUaGlzIGFwcGVhcnMgdG8gYmUgd2hhdCB3ZSBkbyB1cG9uIGluaXRpYWxpemluZwogICAgdGhpcy5nZXRNZXNzYWdlKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Sessions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Sessions.vue","sourceRoot":"src/components","sourcesContent":["<!--<template>-->\n<!--  <div>-->\n<!--    <p>{{ msg }}</p>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--import axios from 'axios';-->\n\n<!--export default {-->\n<!--  name: 'Ping',-->\n<!--  data() {-->\n<!--    return {-->\n<!--      msg: '',-->\n<!--    };-->\n<!--  },-->\n<!--  methods: {-->\n<!--    getMessage() {-->\n<!--      const path = 'http://localhost:5000/ping';-->\n<!--      axios.get(path)-->\n<!--        .then((res) => {-->\n<!--          this.msg = res.data;-->\n<!--        })-->\n<!--        .catch((error) => {-->\n<!--          // eslint-disable-next-line-->\n<!--          console.error(error);-->\n<!--        });-->\n<!--    },-->\n<!--  },-->\n<!--  created() {-->\n<!--    this.getMessage();-->\n<!--  },-->\n<!--};-->\n<!--</script>-->\n<template>\n  <div class=\"container\">\n    <button type=\"button\" class=\"btn btn-primary\">{{ msg }}</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Sessions',\n  data() {\n    return {\n      msg: '',\n    };\n  },\n  methods: {\n    getMessage() {\n      const path = 'http://localhost:5000/sessions';\n      axios.get(path)\n        .then((res) => {\n          this.msg = res.data;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n  },\n  created() {\n    // This appears to be what we do upon initializing\n    this.getMessage();\n  },\n};\n</script>\n"]}]}