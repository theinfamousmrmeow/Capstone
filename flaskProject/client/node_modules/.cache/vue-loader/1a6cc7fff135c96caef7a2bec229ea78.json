{"remainingRequest":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Capstone\\flaskProject\\client\\src\\components\\Brains.vue?vue&type=template&id=478753ed&","dependencies":[{"path":"C:\\Capstone\\flaskProject\\client\\src\\components\\Brains.vue","mtime":1641787350225},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Capstone\\flaskProject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}